MASK = 4294967296 #2 ** 32
MAXINT = 2147483647 #2 ** 31 - 1
MININT = 2147483648 # 2 ** 31
T32 = 4294967295 #2 ** 32 - 1

'''
    转换成2进制，先求不进位的部分，异或，如果是两个1的话，就代表有进位了，会是一个0
    然后求进位的部分，只有两个都是1才进位，所以与了之后左位移就可以了
    然后py的int是64位的，这里对uint做一个取余，让这个数的范围始终在32位以内
    之后，如果是结果是负数的话，还需要额外处理，这里需要原反补的问题
    首先把a和0xffffffff与一下，此时二进制是1的位上，刚好是64位补码上为0的位，再次取反就能拿到a的64位补码
'''
# 顺便记录一下32位int的相关东西，最高位1的话是2 ** 31，intmax = 2 ** 31 - 1,intmin = 2 ** 31
# 32位全1的话，2 ** 32 - 1，此时是-1


class Solution:
    def getSum(self, a: int, b: int) -> int:
        while b != 0:
            add,carry = (a ^ b) % MASK,((a & b) << 1) % MASK
            a,b= add,carry
        return a if a <= MAXINT else ~(a ^ (T32))

        